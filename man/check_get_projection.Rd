% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genomic_data.R
\name{check_get_projection}
\alias{check_get_projection}
\title{Check and set the genome_build/projection}
\usage{
check_get_projection(genomic_data_list, suggested)
}
\arguments{
\item{genomic_data_list}{A list of genomic data objects. Each object should
have a genome build that can be retrieved by \code{get_genome_build()}.}

\item{suggested}{An optional character string specifying a genome build
(projection) to be used. If provided, it must match the genome build inferred
from the data objects.}
}
\value{
A character string representing the genome build to be used.
}
\description{
This helper function checks the genome build of each genomic data object in
\code{genomic_data_list} (using \code{get_genome_build()}) and ensures
they are consistent. If all objects share a single, unique genome build,
that value is returned. If a user-specified genome build (\code{suggested})
is provided, it is compared to the inferred build and must match; otherwise,
an error is raised. If the genomic data objects have conflicting genome
builds or if no genome build can be inferred and no \code{suggested}
value is provided, the function stops with an error.
}
\examples{
# Example 1: When genomic data objects all have the same genome build.
# Assuming maf_data and seg_data both have a genome build of "hg38":
genomic_data <- list(maf_data = maf_data, seg_data = seg_data)
projection <- check_get_projection(genomic_data, suggested = "hg38")

# Example 2: When the genomic data objects conflict or no genome build
# is available.
# This will raise an error:
genomic_data <- list(maf_data = maf_data,
                     seg_data = seg_data_with_different_build)
projection <- check_get_projection(genomic_data, suggested = "hg38")

}
\keyword{internal}
