% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_mutation_frequency_bin_regions.R
\name{calc_mutation_frequency_bin_regions}
\alias{calc_mutation_frequency_bin_regions}
\title{Mutation counts across sliding windows for multiple regions.}
\usage{
calc_mutation_frequency_bin_regions(
  regions_list = NULL,
  regions_bed = NULL,
  these_samples_metadata = NULL,
  these_sample_ids = NULL,
  this_seq_type = "genome",
  maf_data = NULL,
  projection = "grch37",
  region_padding = 1000,
  drop_unmutated = FALSE,
  skip_regions = NULL,
  only_regions = NULL,
  slide_by = 100,
  window_size = 500,
  return_format = "wide",
  ...
)
}
\arguments{
\item{regions_list}{Named vector of regions in the format
c(name1 = "chr:start-end", name2 = "chr:start-end"). If neither \code{regions} nor
\code{regions_bed} is specified, the function will use GAMBLR aSHM region information.}

\item{regions_bed}{Data frame of regions with four columns (chrom, start, end, name).}

\item{these_samples_metadata}{Metadata with at least sample_id column.
If not providing a maf data frame, seq_type is also required.}

\item{these_sample_ids}{Vector of sample IDs. Metadata will be subset to
sample IDs present in this vector.}

\item{this_seq_type}{Optional vector of seq_types to include in heatmap.
Default "genome". Uses default seq_type priority for samples with >1 seq_type.}

\item{maf_data}{Optional maf data frame. Will be subset to rows where
Tumor_Sample_Barcode matches provided sample IDs or metadata table.
If not provided, maf data will be obtained with get_ssm_by_regions().}

\item{projection}{Genome build the function will operate in. Ensure this
matches your provided regions and maf data for correct chr prefix handling. Default "grch37".}

\item{region_padding}{Amount to pad the start and end coordinates by. Default 1000.}

\item{drop_unmutated}{Whether to drop bins with 0 mutations. If returning a
matrix format, this will only drop bins with no mutations in any samples.}

\item{skip_regions}{Optional character vector of genes to exclude from the default aSHM regions.}

\item{only_regions}{Optional character vector of genes to include from the default aSHM regions.}

\item{slide_by}{Slide size for sliding window. Default 100.}

\item{window_size}{Size of sliding window. Default 500.}

\item{return_format}{Return format of mutations. Accepted inputs are "long" and
"wide". Long returns a data frame of one sample ID/window per row. Wide returns
a matrix with one sample ID per row and one window per column. Using the "wide"
format will retain all samples and windows regardless of the drop_unmutated or
min_count_per_bin parameters. Default wide.}

\item{...}{Any additional parameters.}
}
\value{
A table of mutation counts for sliding windows across one or more regions. May be long or wide.
}
\description{
Obtain a long tidy or wide matrix of mutation counts across
sliding windows for multiple regions.
}
\details{
This function takes a metadata table with \code{these_samples_metadata}
parameter and internally calls \code{calc_mutation_frequency_bin_region}
(that internally calls \code{get_ssm_by_regions}).
to retrieve mutation counts for sliding windows across one or more regions.
May optionally provide any combination of a maf data frame, existing metadata,
or a regions data frame or named vector.
}
\examples{
#get some regions
these_regions <- process_regions(only_regions = c("MYC", "BCL2", "BCL6"))
reg_vec <- these_regions$regions_list
reg_bed <- these_regions$regions_bed

# use a set of user defined regions (from genes) and
# calculate mut frequency across all available samples
mult_freq_all = calc_mutation_frequency_bin_regions(regions_list = reg_vec)
mult_freq_all = calc_mutation_frequency_bin_regions(regions_bed = reg_bed)

#subset to a specific sample ID
mult_reg_freq_dohh2 = calc_mutation_frequency_bin_regions(regions_list = reg_vec,
                                                          these_sample_ids = "DOHH-2")

}
