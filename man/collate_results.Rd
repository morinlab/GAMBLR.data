% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/collate_results.R
\name{collate_results}
\alias{collate_results}
\title{Collate Results}
\usage{
collate_results(
  sample_table,
  these_samples_metadata,
  join_with_full_metadata = FALSE,
  seq_type_filter = c("genome", "capture"),
  ...
)
}
\arguments{
\item{sample_table}{A vector of characters with sample IDs, or a data frame with sample IDs in a column (sample_id).
If provided, this will overwrite any sample subsets provided these_samples_metadata.}

\item{these_samples_metadata}{A metadata table with sample IDs of interest.
If not provided, the function will get metadata for all available samples.
This parameter is inteded to use in combination with \code{join_with_full_metadata}.}

\item{join_with_full_metadata}{Set to TRUE to horizontally expand metadata with QC results.
Default is FALSE. If \code{these_samples_metadata} is provided, colalted resutls will be added to this metadata table.
If not provided, the function will join collated results with all avaialble metadata in the specified seq_type (\code{seq_type_filter}).}

\item{seq_type_filter}{Filtering criteria for \code{get_gambl_metadata} if \code{these_samples_metadata} is not provided, default is genomes and captures.}

\item{...}{Any additional parameters.}
}
\value{
A data frame with collated results.
}
\description{
Bring together collated results for a selection of gambl samples.
}
\details{
Currently, this function only gathers QC metrics (\code{mirage_metrics}) as the only collated result.
Potentially, in the future, additional collated results can be added by this function as well.
}
\examples{
#load packages
library(dplyr)

#return collated results for all available samples
all_collated = collate_results()

#return available collated results for a metadata subset
fl_collated = collate_results(
 these_samples_metadata = get_gambl_metadata(
   seq_type_filter = "genome") \%>\% 
   dplyr::filter(pathology == "FL"))

#horizontally expand a metadata subset with collated results
fl_meta_collated = collate_results(
 join_with_full_metadata = TRUE, 
 these_samples_metadata = get_gambl_metadata(
   seq_type_filter = "genome") \%>\% 
   dplyr::filter(pathology == "FL"))

#horizontally expand all available metadata with collated results
all_meta_collated = collate_results(join_with_full_metadata = TRUE)

}
